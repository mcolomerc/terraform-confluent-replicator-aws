#!/bin/bash

echo "---------------------------------------"
echo "Building Replicator Configuration"
echo "---------------------------------------" 

mkdir -p replicator-config

cat > /home/ubuntu/producer.properties <<EOL
# Required connection configs for Kafka producer, consumer, and admin
bootstrap.servers=${destination_bootstrap_endpoint}   
security.protocol=SASL_SSL
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${destination_key}"  password="${destination_secret}";
sasl.mechanism=PLAIN
# Required for correctness in Apache Kafka clients prior to 2.6
client.dns.lookup=use_all_dns_ips 
# Best practice for higher availability in Apache Kafka clients prior to 3.0
session.timeout.ms=45000 
# Best practice for Kafka producer to prevent data loss
acks=all
EOL

echo "---------------------------------------"
echo "/home/ubuntu/producer.properties"
echo "---------------------------------------" 

cat > /home/ubuntu/consumer.properties <<EOL
bootstrap.servers=${source_bootstrap_endpoint}
security.protocol=SASL_SSL
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${source_key}"  password="${source_secret}";
sasl.mechanism=PLAIN
# Required for correctness in Apache Kafka clients prior to 2.6
client.dns.lookup=use_all_dns_ips 
# Best practice for higher availability in Apache Kafka clients prior to 3.0
session.timeout.ms=45000 
# Best practice for Kafka producer to prevent data loss
acks=all
EOL

echo "---------------------------------------"
echo "/home/ubuntu/consumer.properties"
echo "---------------------------------------" 

cat > /home/ubuntu/replicator.properties <<EOL
# Replication configuration
topic.rename.format="${topic_rename}"
topic.whitelist=${source_topicWhiteList}

name="ec2-replicator"
# Disable Offset Translation: https://docs.confluent.io/platform/current/multi-dc-deployments/replicator/replicator-failover.html
offset.translator.tasks.max=0
#since we're not using offset translation there's no need to unnecessarily fill up an unused onprem topic
offset.timestamps.commit=false

confluent.license="${license}"

confluent.topic.bootstrap.servers=${destination_bootstrap_endpoint}   
confluent.topic.sasl.mechanism=PLAIN
confluent.topic.security.protocol=SASL_SSL
confluent.topic.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${destination_key}" password="${destination_secret}";

offset.start=consumer

topic.auto.create=true
topic.preserve.partitions=true
topic.config.sync=true

replication.factor=3
config.storage.replication.factor=3
offset.storage.replication.factor=3
status.storage.replication.factor=3 

# Configuration for embedded producer
producer.sasl.mechanism=PLAIN
producer.security.protocol=SASL_SSL
producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${destination_key}" password="${destination_secret}";

# Configuration for embedded producer.confluent.monitoring.interceptor
producer.confluent.monitoring.interceptor.sasl.mechanism=PLAIN
producer.confluent.monitoring.interceptor.security.protocol=SASL_SSL
producer.confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${destination_key}"  password="${destination_secret}";
EOL

echo "---------------------------------------"
echo "/home/ubuntu/replicator.properties"
echo "---------------------------------------" 

# Commands to configure ACLs for the _confluent-command license topic on Confluent Cloud:
#Destination as backend
echo "confluent kafka acl create --allow --service-account ${service_account_id}--operations create,write,read,describe,describe-configs,alter-configs --topic _confluent-command"